name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run linting (flake8)
      run: |
        flake8 forex_system --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 forex_system --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run type checking (mypy)
      continue-on-error: true
      run: |
        mypy forex_system --ignore-missing-imports --no-strict-optional

    - name: Run tests with pytest
      run: |
        pytest forex_system/tests/ -v --tb=short --cov=forex_system --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run security checks (bandit)
      run: |
        bandit -r forex_system -f json -o bandit-report.json || true
        bandit -r forex_system -f screen

    - name: Check dependencies for vulnerabilities (safety)
      continue-on-error: true
      run: |
        pip freeze | safety check --stdin

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint black

    - name: Run code quality checks (pylint)
      continue-on-error: true
      run: |
        pylint forex_system --exit-zero --output-format=text

    - name: Check code formatting (black)
      run: |
        black --check forex_system || true
